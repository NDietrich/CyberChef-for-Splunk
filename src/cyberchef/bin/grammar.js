// Generated automatically by nearley, version undefined
// http://github.com/Hardmath123/nearley
(function () {
function id(x) { return x[0]; }
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "_$ebnf$1", "symbols": []},
    {"name": "_$ebnf$1", "symbols": ["wschar", "_$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "_", "symbols": ["_$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "__$ebnf$1", "symbols": ["wschar"]},
    {"name": "__$ebnf$1", "symbols": ["wschar", "__$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "__", "symbols": ["__$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "wschar", "symbols": [/[ \t\n\v\f]/], "postprocess": id},
    {"name": "E", "symbols": ["_", "EXPRESSION", "_"], "postprocess": function(d) {return d[1]}},
    {"name": "EXPRESSION", "symbols": ["INOPTION", "__", "OPTIONALCMDS"], "postprocess": function(d) {return [d[0], d[2]]}},
    {"name": "EXPRESSION", "symbols": ["OPTIONALCMDS", "__", "INOPTION"], "postprocess": function(d) {return [d[0], d[2]]}},
    {"name": "EXPRESSION", "symbols": ["INOPTION", "__", "OUTOPTION", "__", "OPTIONALCMDS"], "postprocess": function(d) {return [d[0], d[2], d[4]]}},
    {"name": "EXPRESSION", "symbols": ["INOPTION", "__", "OPTIONALCMDS", "__", "OUTOPTION"], "postprocess": function(d) {return [d[0], d[2], d[4]]}},
    {"name": "EXPRESSION", "symbols": ["OUTOPTION", "__", "INOPTION", "__", "OPTIONALCMDS"], "postprocess": function(d) {return [d[0], d[2], d[4]]}},
    {"name": "EXPRESSION", "symbols": ["OUTOPTION", "__", "OPTIONALCMDS", "__", "INOPTION"], "postprocess": function(d) {return [d[0], d[2], d[4]]}},
    {"name": "EXPRESSION", "symbols": ["OPTIONALCMDS", "__", "INOPTION", "__", "OUTOPTION"], "postprocess": function(d) {return [d[0], d[2], d[4]]}},
    {"name": "EXPRESSION", "symbols": ["OPTIONALCMDS", "__", "OUTOPTION", "__", "INOPTION"], "postprocess": function(d) {return [d[0], d[2], d[4]]}},
    {"name": "INOPTION$subexpression$1", "symbols": [/[iI]/, /[nN]/, /[fF]/, /[iI]/, /[eE]/, /[lL]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "INOPTION", "symbols": ["INOPTION$subexpression$1", "_", {"literal":"=","pos":149}, "_", "FIELDNAME"], "postprocess": function(d) {return {infield:d[4]}}},
    {"name": "INOPTION$subexpression$2", "symbols": [/[iI]/, /[nN]/, /[fF]/, /[iI]/, /[eE]/, /[lL]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "INOPTION", "symbols": ["INOPTION$subexpression$2", "_", {"literal":"=","pos":164}, "_", {"literal":"'","pos":168}, "QUOTEDFIELDNAME", {"literal":"'","pos":172}], "postprocess": function(d) {return {infield:d[5]}}},
    {"name": "INOPTION$subexpression$3", "symbols": [/[iI]/, /[nN]/, /[fF]/, /[iI]/, /[eE]/, /[lL]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "INOPTION", "symbols": ["INOPTION$subexpression$3", "_", {"literal":"=","pos":183}, "_", {"literal":"\"","pos":187}, "QUOTEDFIELDNAME", {"literal":"\"","pos":191}], "postprocess": function(d) {return {infield:d[5]}}},
    {"name": "OUTOPTION$subexpression$1", "symbols": [/[oO]/, /[uU]/, /[tT]/, /[fF]/, /[iI]/, /[eE]/, /[lL]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "OUTOPTION", "symbols": ["OUTOPTION$subexpression$1", "_", {"literal":"=","pos":204}, "_", "FIELDNAME"], "postprocess": function(d) {return {outfield:d[4]}}},
    {"name": "OUTOPTION$subexpression$2", "symbols": [/[oO]/, /[uU]/, /[tT]/, /[fF]/, /[iI]/, /[eE]/, /[lL]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "OUTOPTION", "symbols": ["OUTOPTION$subexpression$2", "_", {"literal":"=","pos":219}, "_", {"literal":"'","pos":223}, "QUOTEDFIELDNAME", {"literal":"'","pos":227}], "postprocess": function(d) {return {outfield:d[5]}}},
    {"name": "OUTOPTION$subexpression$3", "symbols": [/[oO]/, /[uU]/, /[tT]/, /[fF]/, /[iI]/, /[eE]/, /[lL]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "OUTOPTION", "symbols": ["OUTOPTION$subexpression$3", "_", {"literal":"=","pos":238}, "_", {"literal":"\"","pos":242}, "QUOTEDFIELDNAME", {"literal":"\"","pos":246}], "postprocess": function(d) {return {outfield:d[5]}}},
    {"name": "OPTIONALCMDS", "symbols": ["RECIPEOPTION"], "postprocess": id},
    {"name": "OPTIONALCMDS", "symbols": ["OPPOPTION"], "postprocess": id},
    {"name": "OPTIONALCMDS", "symbols": ["B64RECIPE"], "postprocess": id},
    {"name": "OPTIONALCMDS", "symbols": ["JSONRECIPE"], "postprocess": id},
    {"name": "RECIPEOPTION$subexpression$1", "symbols": [/[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "RECIPEOPTION$ebnf$1", "symbols": [/[\w]/]},
    {"name": "RECIPEOPTION$ebnf$1", "symbols": [/[\w]/, "RECIPEOPTION$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "RECIPEOPTION", "symbols": ["RECIPEOPTION$subexpression$1", "_", {"literal":"=","pos":285}, "_", "RECIPEOPTION$ebnf$1"], "postprocess": function(d) {return {recipe:d[4].join('')}}},
    {"name": "RECIPEOPTION$subexpression$2", "symbols": [/[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "RECIPEOPTION", "symbols": ["RECIPEOPTION$subexpression$2", "_", {"literal":"=","pos":301}, "_", {"literal":"\"","pos":305}, "QUOTEDOPT", {"literal":"\"","pos":309}], "postprocess": function(d) {return {recipe:d[5]}}},
    {"name": "RECIPEOPTION$subexpression$3", "symbols": [/[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "RECIPEOPTION", "symbols": ["RECIPEOPTION$subexpression$3", "_", {"literal":"=","pos":320}, "_", {"literal":"'","pos":324}, "QUOTEDOPT", {"literal":"'","pos":328}], "postprocess": function(d) {return {recipe:d[5]}}},
    {"name": "OPPOPTION$subexpression$1", "symbols": [/[oO]/, /[pP]/, /[eE]/, /[rR]/, /[aA]/, /[tT]/, /[iI]/, /[oO]/, /[nN]/], "postprocess": function(e){return e.join("")}},
    {"name": "OPPOPTION$ebnf$1", "symbols": [/[\w]/]},
    {"name": "OPPOPTION$ebnf$1", "symbols": [/[\w]/, "OPPOPTION$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "OPPOPTION", "symbols": ["OPPOPTION$subexpression$1", "_", {"literal":"=","pos":341}, "_", "OPPOPTION$ebnf$1"], "postprocess": function(d) {return {operation:d[4].join('')}}},
    {"name": "OPPOPTION$subexpression$2", "symbols": [/[oO]/, /[pP]/, /[eE]/, /[rR]/, /[aA]/, /[tT]/, /[iI]/, /[oO]/, /[nN]/], "postprocess": function(e){return e.join("")}},
    {"name": "OPPOPTION", "symbols": ["OPPOPTION$subexpression$2", "_", {"literal":"=","pos":357}, "_", {"literal":"\"","pos":361}, "QUOTEDOPT", {"literal":"\"","pos":365}], "postprocess": function(d) {return {operation:d[5]}}},
    {"name": "OPPOPTION$subexpression$3", "symbols": [/[oO]/, /[pP]/, /[eE]/, /[rR]/, /[aA]/, /[tT]/, /[iI]/, /[oO]/, /[nN]/], "postprocess": function(e){return e.join("")}},
    {"name": "OPPOPTION", "symbols": ["OPPOPTION$subexpression$3", "_", {"literal":"=","pos":376}, "_", {"literal":"'","pos":380}, "QUOTEDOPT", {"literal":"'","pos":384}], "postprocess": function(d) {return {operation:d[5]}}},
    {"name": "B64RECIPE$subexpression$1", "symbols": [/[bB]/, {"literal":"6"}, {"literal":"4"}, /[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "B64RECIPE$ebnf$1", "symbols": [/[a-zA-Z0-9=/+]/]},
    {"name": "B64RECIPE$ebnf$1", "symbols": [/[a-zA-Z0-9=/+]/, "B64RECIPE$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "B64RECIPE", "symbols": ["B64RECIPE$subexpression$1", "_", {"literal":"=","pos":397}, "_", "B64RECIPE$ebnf$1"], "postprocess": function(d) {return {b64recipe:d[4].join('')}}},
    {"name": "B64RECIPE$subexpression$2", "symbols": [/[bB]/, {"literal":"6"}, {"literal":"4"}, /[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "B64RECIPE$ebnf$2", "symbols": [/[a-zA-Z0-9=/+]/]},
    {"name": "B64RECIPE$ebnf$2", "symbols": [/[a-zA-Z0-9=/+]/, "B64RECIPE$ebnf$2"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "B64RECIPE", "symbols": ["B64RECIPE$subexpression$2", "_", {"literal":"=","pos":413}, "_", {"literal":"\"","pos":417}, "B64RECIPE$ebnf$2", {"literal":"\"","pos":422}], "postprocess": function(d) {return {b64recipe:d[5].join('')}}},
    {"name": "B64RECIPE$subexpression$3", "symbols": [/[bB]/, {"literal":"6"}, {"literal":"4"}, /[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "B64RECIPE$ebnf$3", "symbols": [/[a-zA-Z0-9=/+]/]},
    {"name": "B64RECIPE$ebnf$3", "symbols": [/[a-zA-Z0-9=/+]/, "B64RECIPE$ebnf$3"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "B64RECIPE", "symbols": ["B64RECIPE$subexpression$3", "_", {"literal":"=","pos":433}, "_", {"literal":"'","pos":437}, "B64RECIPE$ebnf$3", {"literal":"'","pos":442}], "postprocess": function(d) {return {b64recipe:d[5].join('')}}},
    {"name": "JSONRECIPE$subexpression$1", "symbols": [/[jJ]/, /[sS]/, /[oO]/, /[nN]/, /[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "JSONRECIPE", "symbols": ["JSONRECIPE$subexpression$1", "_", {"literal":"=","pos":455}, "_", {"literal":"\"","pos":459}, "JSONCHARS", {"literal":"\"","pos":463}], "postprocess": function(d) {return {jsonRecipe:d[5]}}},
    {"name": "FIELDNAME$ebnf$1", "symbols": []},
    {"name": "FIELDNAME$ebnf$1", "symbols": ["FIELDNAMECHARS", "FIELDNAME$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "FIELDNAME", "symbols": [/[a-zA-Z]/, "FIELDNAME$ebnf$1"], "postprocess": function(d) {return Â d[0].concat(d[1].join('')) }},
    {"name": "FIELDNAMECHARS", "symbols": [/[\w]/], "postprocess": id},
    {"name": "QUOTEDFIELDNAME$ebnf$1", "symbols": ["QUOTEDFIELDNAMECHAR"]},
    {"name": "QUOTEDFIELDNAME$ebnf$1", "symbols": ["QUOTEDFIELDNAMECHAR", "QUOTEDFIELDNAME$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "QUOTEDFIELDNAME", "symbols": ["QUOTEDFIELDNAME$ebnf$1"], "postprocess": function(d) {return Â d[0].join('') }},
    {"name": "QUOTEDFIELDNAMECHAR", "symbols": [/[\w]/], "postprocess": id},
    {"name": "QUOTEDFIELDNAMECHAR", "symbols": [{"literal":" ","pos":511}], "postprocess": id},
    {"name": "QUOTEDFIELDNAMECHAR", "symbols": [/[.:]/], "postprocess": id},
    {"name": "QUOTEDOPT$ebnf$1", "symbols": ["QUOTEDOPTCHAR"]},
    {"name": "QUOTEDOPT$ebnf$1", "symbols": ["QUOTEDOPTCHAR", "QUOTEDOPT$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "QUOTEDOPT", "symbols": ["QUOTEDOPT$ebnf$1"], "postprocess": function(d) {return Â d[0].join('') }},
    {"name": "QUOTEDOPTCHAR", "symbols": [/[\w]/], "postprocess": id},
    {"name": "QUOTEDOPTCHAR", "symbols": [/[(){}\\,.\[\]:-]/], "postprocess": id},
    {"name": "QUOTEDOPTCHAR", "symbols": [{"literal":"@","pos":548}], "postprocess": id},
    {"name": "QUOTEDOPTCHAR", "symbols": [{"literal":"#","pos":554}], "postprocess": id},
    {"name": "QUOTEDOPTCHAR", "symbols": [{"literal":"\"","pos":560}], "postprocess": id},
    {"name": "QUOTEDOPTCHAR", "symbols": [{"literal":" ","pos":566}], "postprocess": id},
    {"name": "JSONCHARS$ebnf$1", "symbols": ["JSONCHAR"]},
    {"name": "JSONCHARS$ebnf$1", "symbols": ["JSONCHAR", "JSONCHARS$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "JSONCHARS", "symbols": ["JSONCHARS$ebnf$1"], "postprocess": function(d) {return Â d[0].join('') }},
    {"name": "JSONCHAR", "symbols": [/[ -~]/], "postprocess": id}
]
  , ParserStart: "E"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
