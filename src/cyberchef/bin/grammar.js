// Generated automatically by nearley, version undefined
// http://github.com/Hardmath123/nearley
(function () {
function id(x) { return x[0]; }
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "_$ebnf$1", "symbols": []},
    {"name": "_$ebnf$1", "symbols": ["wschar", "_$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "_", "symbols": ["_$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "__$ebnf$1", "symbols": ["wschar"]},
    {"name": "__$ebnf$1", "symbols": ["wschar", "__$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "__", "symbols": ["__$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "wschar", "symbols": [/[ \t\n\v\f]/], "postprocess": id},
    {"name": "E", "symbols": ["_", "EXPRESSION", "_"], "postprocess": function(d) {return d[1]}},
    {"name": "EXPRESSION", "symbols": ["INOPTION", "__", "OPTIONALCMDS"], "postprocess": function(d) {return [d[0], d[2]]}},
    {"name": "EXPRESSION", "symbols": ["OPTIONALCMDS", "__", "INOPTION"], "postprocess": function(d) {return [d[0], d[2]]}},
    {"name": "EXPRESSION", "symbols": ["INOPTION", "__", "OUTOPTION", "__", "OPTIONALCMDS"], "postprocess": function(d) {return [d[0], d[2], d[4]]}},
    {"name": "EXPRESSION", "symbols": ["INOPTION", "__", "OPTIONALCMDS", "__", "OUTOPTION"], "postprocess": function(d) {return [d[0], d[2], d[4]]}},
    {"name": "EXPRESSION", "symbols": ["OUTOPTION", "__", "INOPTION", "__", "OPTIONALCMDS"], "postprocess": function(d) {return [d[0], d[2], d[4]]}},
    {"name": "EXPRESSION", "symbols": ["OUTOPTION", "__", "OPTIONALCMDS", "__", "INOPTION"], "postprocess": function(d) {return [d[0], d[2], d[4]]}},
    {"name": "EXPRESSION", "symbols": ["OPTIONALCMDS", "__", "INOPTION", "__", "OUTOPTION"], "postprocess": function(d) {return [d[0], d[2], d[4]]}},
    {"name": "EXPRESSION", "symbols": ["OPTIONALCMDS", "__", "OUTOPTION", "__", "INOPTION"], "postprocess": function(d) {return [d[0], d[2], d[4]]}},
    {"name": "INOPTION$subexpression$1", "symbols": [/[iI]/, /[nN]/, /[fF]/, /[iI]/, /[eE]/, /[lL]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "INOPTION", "symbols": ["INOPTION$subexpression$1", "_", {"literal":"=","pos":143}, "_", "FIELDNAME"], "postprocess": function(d) {return {infield:d[4]}}},
    {"name": "INOPTION$subexpression$2", "symbols": [/[iI]/, /[nN]/, /[fF]/, /[iI]/, /[eE]/, /[lL]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "INOPTION", "symbols": ["INOPTION$subexpression$2", "_", {"literal":"=","pos":158}, "_", {"literal":"'","pos":162}, "QUOTEDFIELDNAME", {"literal":"'","pos":166}], "postprocess": function(d) {return {infield:d[5]}}},
    {"name": "INOPTION$subexpression$3", "symbols": [/[iI]/, /[nN]/, /[fF]/, /[iI]/, /[eE]/, /[lL]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "INOPTION", "symbols": ["INOPTION$subexpression$3", "_", {"literal":"=","pos":177}, "_", {"literal":"\"","pos":181}, "QUOTEDFIELDNAME", {"literal":"\"","pos":185}], "postprocess": function(d) {return {infield:d[5]}}},
    {"name": "OUTOPTION$subexpression$1", "symbols": [/[oO]/, /[uU]/, /[tT]/, /[fF]/, /[iI]/, /[eE]/, /[lL]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "OUTOPTION", "symbols": ["OUTOPTION$subexpression$1", "_", {"literal":"=","pos":198}, "_", "FIELDNAME"], "postprocess": function(d) {return {outfield:d[4]}}},
    {"name": "OUTOPTION$subexpression$2", "symbols": [/[oO]/, /[uU]/, /[tT]/, /[fF]/, /[iI]/, /[eE]/, /[lL]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "OUTOPTION", "symbols": ["OUTOPTION$subexpression$2", "_", {"literal":"=","pos":213}, "_", {"literal":"'","pos":217}, "QUOTEDFIELDNAME", {"literal":"'","pos":221}], "postprocess": function(d) {return {outfield:d[5]}}},
    {"name": "OUTOPTION$subexpression$3", "symbols": [/[oO]/, /[uU]/, /[tT]/, /[fF]/, /[iI]/, /[eE]/, /[lL]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "OUTOPTION", "symbols": ["OUTOPTION$subexpression$3", "_", {"literal":"=","pos":232}, "_", {"literal":"\"","pos":236}, "QUOTEDFIELDNAME", {"literal":"\"","pos":240}], "postprocess": function(d) {return {outfield:d[5]}}},
    {"name": "OPTIONALCMDS", "symbols": ["RECIPEOPTION"], "postprocess": id},
    {"name": "OPTIONALCMDS", "symbols": ["CMDOPTION"], "postprocess": id},
    {"name": "OPTIONALCMDS", "symbols": ["B64RECIPE"], "postprocess": id},
    {"name": "RECIPEOPTION$subexpression$1", "symbols": [/[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "RECIPEOPTION$ebnf$1", "symbols": [/[\w]/]},
    {"name": "RECIPEOPTION$ebnf$1", "symbols": [/[\w]/, "RECIPEOPTION$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "RECIPEOPTION", "symbols": ["RECIPEOPTION$subexpression$1", "_", {"literal":"=","pos":273}, "_", "RECIPEOPTION$ebnf$1"], "postprocess": function(d) {return {recipe:d[4].join('')}}},
    {"name": "RECIPEOPTION$subexpression$2", "symbols": [/[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "RECIPEOPTION", "symbols": ["RECIPEOPTION$subexpression$2", "_", {"literal":"=","pos":289}, "_", {"literal":"\"","pos":293}, "QUOTEDOPT", {"literal":"\"","pos":297}], "postprocess": function(d) {return {recipe:d[5]}}},
    {"name": "RECIPEOPTION$subexpression$3", "symbols": [/[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "RECIPEOPTION", "symbols": ["RECIPEOPTION$subexpression$3", "_", {"literal":"=","pos":308}, "_", {"literal":"'","pos":312}, "QUOTEDOPT", {"literal":"'","pos":316}], "postprocess": function(d) {return {recipe:d[5]}}},
    {"name": "CMDOPTION$subexpression$1", "symbols": [/[cC]/, /[oO]/, /[mM]/, /[mM]/, /[aA]/, /[nN]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "CMDOPTION$ebnf$1", "symbols": [/[\w]/]},
    {"name": "CMDOPTION$ebnf$1", "symbols": [/[\w]/, "CMDOPTION$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "CMDOPTION", "symbols": ["CMDOPTION$subexpression$1", "_", {"literal":"=","pos":329}, "_", "CMDOPTION$ebnf$1"], "postprocess": function(d) {return {command:d[4].join('')}}},
    {"name": "CMDOPTION$subexpression$2", "symbols": [/[cC]/, /[oO]/, /[mM]/, /[mM]/, /[aA]/, /[nN]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "CMDOPTION", "symbols": ["CMDOPTION$subexpression$2", "_", {"literal":"=","pos":345}, "_", {"literal":"\"","pos":349}, "QUOTEDOPT", {"literal":"\"","pos":353}], "postprocess": function(d) {return {command:d[5]}}},
    {"name": "CMDOPTION$subexpression$3", "symbols": [/[cC]/, /[oO]/, /[mM]/, /[mM]/, /[aA]/, /[nN]/, /[dD]/], "postprocess": function(e){return e.join("")}},
    {"name": "CMDOPTION", "symbols": ["CMDOPTION$subexpression$3", "_", {"literal":"=","pos":364}, "_", {"literal":"'","pos":368}, "QUOTEDOPT", {"literal":"'","pos":372}], "postprocess": function(d) {return {command:d[5]}}},
    {"name": "B64RECIPE$subexpression$1", "symbols": [/[bB]/, {"literal":"6"}, {"literal":"4"}, /[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "B64RECIPE$ebnf$1", "symbols": [/[a-zA-Z0-9=/+]/]},
    {"name": "B64RECIPE$ebnf$1", "symbols": [/[a-zA-Z0-9=/+]/, "B64RECIPE$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "B64RECIPE", "symbols": ["B64RECIPE$subexpression$1", "_", {"literal":"=","pos":385}, "_", "B64RECIPE$ebnf$1"], "postprocess": function(d) {return {b64recipe:d[4].join('')}}},
    {"name": "B64RECIPE$subexpression$2", "symbols": [/[bB]/, {"literal":"6"}, {"literal":"4"}, /[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "B64RECIPE$ebnf$2", "symbols": [/[a-zA-Z0-9=/+]/]},
    {"name": "B64RECIPE$ebnf$2", "symbols": [/[a-zA-Z0-9=/+]/, "B64RECIPE$ebnf$2"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "B64RECIPE", "symbols": ["B64RECIPE$subexpression$2", "_", {"literal":"=","pos":401}, "_", {"literal":"\"","pos":405}, "B64RECIPE$ebnf$2", {"literal":"\"","pos":410}], "postprocess": function(d) {return {b64recipe:d[5].join('')}}},
    {"name": "B64RECIPE$subexpression$3", "symbols": [/[bB]/, {"literal":"6"}, {"literal":"4"}, /[rR]/, /[eE]/, /[cC]/, /[iI]/, /[pP]/, /[eE]/], "postprocess": function(e){return e.join("")}},
    {"name": "B64RECIPE$ebnf$3", "symbols": [/[a-zA-Z0-9=/+]/]},
    {"name": "B64RECIPE$ebnf$3", "symbols": [/[a-zA-Z0-9=/+]/, "B64RECIPE$ebnf$3"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "B64RECIPE", "symbols": ["B64RECIPE$subexpression$3", "_", {"literal":"=","pos":421}, "_", {"literal":"'","pos":425}, "B64RECIPE$ebnf$3", {"literal":"'","pos":430}], "postprocess": function(d) {return {b64recipe:d[5].join('')}}},
    {"name": "FIELDNAME$ebnf$1", "symbols": []},
    {"name": "FIELDNAME$ebnf$1", "symbols": ["FIELDNAMECHARS", "FIELDNAME$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "FIELDNAME", "symbols": [/[a-zA-Z]/, "FIELDNAME$ebnf$1"], "postprocess": function(d) {return  d[0].concat(d[1].join('')) }},
    {"name": "FIELDNAMECHARS", "symbols": [/[\w]/], "postprocess": id},
    {"name": "QUOTEDFIELDNAME$ebnf$1", "symbols": ["QUOTEDFIELDNAMECHAR"]},
    {"name": "QUOTEDFIELDNAME$ebnf$1", "symbols": ["QUOTEDFIELDNAMECHAR", "QUOTEDFIELDNAME$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "QUOTEDFIELDNAME", "symbols": ["QUOTEDFIELDNAME$ebnf$1"], "postprocess": function(d) {return  d[0].join('') }},
    {"name": "QUOTEDFIELDNAMECHAR", "symbols": [/[\w]/], "postprocess": id},
    {"name": "QUOTEDFIELDNAMECHAR", "symbols": [{"literal":" ","pos":478}], "postprocess": id},
    {"name": "QUOTEDFIELDNAMECHAR", "symbols": [/[.:]/], "postprocess": id},
    {"name": "QUOTEDOPT$ebnf$1", "symbols": ["QUOTEDOPTCHAR"]},
    {"name": "QUOTEDOPT$ebnf$1", "symbols": ["QUOTEDOPTCHAR", "QUOTEDOPT$ebnf$1"], "postprocess": function arrconcat(d) {return [d[0]].concat(d[1]);}},
    {"name": "QUOTEDOPT", "symbols": ["QUOTEDOPT$ebnf$1"], "postprocess": function(d) {return  d[0].join('') }},
    {"name": "QUOTEDOPTCHAR", "symbols": [/[\w]/], "postprocess": id},
    {"name": "QUOTEDOPTCHAR", "symbols": [/[(){}\\,.\[\]:-]/], "postprocess": id},
    {"name": "QUOTEDOPTCHAR", "symbols": [{"literal":"@","pos":515}], "postprocess": id},
    {"name": "QUOTEDOPTCHAR", "symbols": [{"literal":"#","pos":521}], "postprocess": id},
    {"name": "QUOTEDOPTCHAR", "symbols": [{"literal":"\"","pos":527}], "postprocess": id},
    {"name": "QUOTEDOPTCHAR", "symbols": [{"literal":" ","pos":533}], "postprocess": id}
]
  , ParserStart: "E"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
