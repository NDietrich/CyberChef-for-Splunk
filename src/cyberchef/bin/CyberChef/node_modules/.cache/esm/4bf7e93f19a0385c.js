let Operation,OperationError,GostDigest,toHexFast;_19a‍.x([["default",()=>_19a‍.o]]);_19a‍.w("../Operation.mjs",[["default",["Operation"],function(v){Operation=v}]]);_19a‍.w("../errors/OperationError.mjs",[["default",["OperationError"],function(v){OperationError=v}]]);_19a‍.w("../vendor/gost/gostDigest.mjs",[["default",["GostDigest"],function(v){GostDigest=v}]]);_19a‍.w("../lib/Hex.mjs",[["toHexFast",["toHexFast"],function(v){toHexFast=v}]]);/**
 * @author mshwed [m@ttshwed.com]
 * @copyright Crown Copyright 2019
 * @license Apache-2.0
 */






/**
 * Streebog operation
 */
class Streebog extends Operation {

    /**
     * Streebog constructor
     */
    constructor() {
        super();

        this.name = "Streebog";
        this.module = "Hashing";
        this.description = "Streebog is a cryptographic hash function defined in the Russian national standard GOST R 34.11-2012 <i>Information Technology \u2013 Cryptographic Information Security \u2013 Hash Function</i>. It was created to replace an obsolete GOST hash function defined in the old standard GOST R 34.11-94, and as an asymmetric reply to SHA-3 competition by the US National Institute of Standards and Technology.";
        this.infoURL = "https://wikipedia.org/wiki/Streebog";
        this.inputType = "ArrayBuffer";
        this.outputType = "string";
        this.args = [
            {
                "name": "Size",
                "type": "option",
                "value": ["256", "512"]
            }
        ];
    }

    /**
     * @param {ArrayBuffer} input
     * @param {Object[]} args
     * @returns {string}
     */
    run(input, args) {
        try {
            const length = parseInt(args[0], 10);
            const gostDigest = new GostDigest({
                name: "GOST R 34.11",
                version: 2012,
                length: length
            });

            return toHexFast(gostDigest.digest(input));
        } catch (err) {
            throw new OperationError(err);
        }
    }

}

_19a‍.d(Streebog);
