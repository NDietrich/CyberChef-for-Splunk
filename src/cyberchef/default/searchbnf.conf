[cyberchef-command]

maintainer 		= Noah Dietrich
shortdesc 		= Apply CyberChef operations and recipes to your events.

description 	= Process field values with CyberChef operations or recipes.  An operation is a single CyberChef function (like "toBase64") without any parameters.  A recipe is one or more operations, optionally with parameters (parameters such as specifying the block size with the "SHA3" function).\p\\
you must specify the "infield=" with this command, which tells cyberchef what field to apply the operation or recipe to.\p\\
you can optionally specify an "outfield=" to have the results writtent back to a different field (the field will be created if it does not exist). If you don't specify the "outfield=" then the results are written back over the input field.\p\\
You must specify one of the following options:\i\\
	"operation" - a single CyberChef operation with no parameters.\i\\
	"b64recipe" - a CyberChef recipe, saved as compact json, and then converted to a base64 string.\i\\
	"recipe" - a cyberchef recipe, saved as compact json, and given a nickname. These recipes must be saved to a text file located in this App's ./local/recipes folder.  See the ./default/recipes/readme.txt file for examples.


category   		= fields::modifying
usage 			= public
tags 			= encode decode cyberchef

syntax = cyberchef infield=<field> (outfield=<field>)? ((operation=<string>)|(recipe=<string>)|(b64recipe=<string>))


example1 = ... | cyberchef infield=data operation="toBase64"
comment1 = Convert the value of the 'data' field to Base64 encoding, and save in back to the 'data' field. Note: you can't pass parameters to the CyberChef operation with this option.

example2 = ... | cyberchef infield=data b64recipe="W3sib3AiOiJUbyBCYXNlNjQiLCJhcmdzIjpbIkEtWmEtejAtOSsvPSJdfV0="
comment2 = Apply a CyberChef Recipe (in this case toBase64) to the 'data' field. The b64recipe option is a compact-json representation of the recipe, encoded as a base64 string.  See this App's README.md for more information.

example3 = ... | cyberchef infield=data outfield=newData recipe='myRecipe'
comment3 = Load a CyberChef recipe named 'myRecipe' from a file located in ./lcoal/recipes/, and apply it to the 'data' field. See the README.txt in this Apps's default recipes folder.

